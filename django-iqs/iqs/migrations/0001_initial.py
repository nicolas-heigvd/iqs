# Generated by Django 5.2 on 2025-07-25 14:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttributePriorityLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('1', 'Level N1'), ('2', 'Level N2'), ('3', 'Level N3'), ('4', 'Level N4'), (None, 'Level not set')], max_length=24, null=True, unique=True, verbose_name='Attribute priority level')),
            ],
            options={
                'verbose_name': 'Attribute priority level',
                'verbose_name_plural': 'Attribute priority levels',
            },
        ),
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, unique=True, verbose_name='Attribute type')),
            ],
        ),
        migrations.CreateModel(
            name='GeoLayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, unique=True)),
                ('epsg_code', models.IntegerField(default=4326)),
            ],
        ),
        migrations.CreateModel(
            name='GeometryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Point', 'Point'), ('Linestring', 'Linestring'), ('Polygon', 'Polygon'), ('PointZ', 'PointZ'), ('LinestringZ', 'LinestringZ'), ('PolygonZ', 'PolygonZ'), ('MultiPoint', 'MultiPoint'), ('MultiLinestring', 'MultiLinestring'), ('MultiPolygon', 'MultiPolygon'), ('MultiPointZ', 'MultiPointZ'), ('MultiLinestringZ', 'MultiLinestringZ'), ('MultiPolygonZ', 'MultiPolygonZ')], max_length=1024, unique=True, verbose_name='Geometry type')),
            ],
        ),
        migrations.CreateModel(
            name='OgcRelationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('disjoint', 'disjoint'), ('intersects', 'intersects'), ('contains', 'contains'), ('within', 'within'), ('touches', 'touches'), ('equals', 'equals')], max_length=1024, unique=True, verbose_name='OGC relation type')),
            ],
            options={
                'verbose_name': 'OGC relation type',
                'verbose_name_plural': 'OGC relation types',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, unique=True)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iqs.attributetype')),
                ('geolayer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='iqs.geolayer')),
            ],
        ),
        migrations.AddField(
            model_name='geolayer',
            name='geom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iqs.geometrytype'),
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1024)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iqs.attribute')),
                ('priority_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='iqs.attributeprioritylevel')),
                ('geolayer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iqs.geolayer')),
            ],
            options={
                'unique_together': {('content', 'geolayer', 'attribute')},
            },
        ),
    ]
